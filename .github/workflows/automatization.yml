name: Automation

on:
  pull_request:
    types: [opened]
  issues:
    types: [closed]

jobs:
  update-project:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI with PAT
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      - name: Add PR and move to Review
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        run: |
          PROJECT_ID="PVT_kwHOCXv9ec4BDT_9"
          STATUS_FIELD_ID="PVTSSF_lAHOCXv9ec4BDT_9zg1RKBc"
          REVIEW_OPTION_ID="98236657"
          CONTENT_ID="${{ github.event.pull_request.node_id }}"

          # Add PR to Project V2
          ITEM_ID=$(gh api graphql -f query='
          mutation($projectId: ID!, $contentId: ID!) {
            addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
              item {
                id
              }
            }
          }' -F projectId="$PROJECT_ID" -F contentId="$CONTENT_ID" -q ".data.addProjectV2ItemById.item.id")

          if [ -z "$ITEM_ID" ]; then
            echo "Failed to create project item"
            exit 1
          fi

          # Move to Review
          gh api graphql -f query='
          mutation($itemId: ID!, $fieldId: ID!, $optionId: String!) {
            updateProjectV2ItemField(input: {itemId: $itemId, fieldId: $fieldId, value: {singleSelectOptionId: $optionId}}) {
              projectV2Item { id }
            }
          }' -F itemId="$ITEM_ID" -F fieldId="$STATUS_FIELD_ID" -F optionId="$REVIEW_OPTION_ID"

      - name: Add closed issue to project and move to Done
        if: github.event_name == 'issues' && github.event.action == 'closed'
        run: |
          PROJECT_ID="PVT_kwHOCXv9ec4BDT_9"
          STATUS_FIELD_ID="PVTSSF_lAHOCXv9ec4BDT_9zg1RKBc"
          DONE_OPTION_ID="51a48839"
          CONTENT_ID="${{ github.event.issue.node_id }}"

          # Add issue to Project V2
          ITEM_ID=$(gh api graphql -f query='
          mutation($projectId: ID!, $contentId: ID!) {
            addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
              item {
                id
              }
            }
          }' -F projectId="$PROJECT_ID" -F contentId="$CONTENT_ID" -q ".data.addProjectV2ItemById.item.id")

          if [ -z "$ITEM_ID" ]; then
            echo "Failed to create project item"
            exit 1
          fi

          # Move to Done
          gh api graphql -f query='
          mutation($itemId: ID!, $fieldId: ID!, $optionId: String!) {
            updateProjectV2ItemField(input: {itemId: $itemId, fieldId: $fieldId, value: {singleSelectOptionId: $optionId}}) {
              projectV2Item { id }
            }
          }' -F itemId="$ITEM_ID" -F fieldId="$STATUS_FIELD_ID" -F optionId="$DONE_OPTION_ID"
